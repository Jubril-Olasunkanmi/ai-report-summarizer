# -*- coding: utf-8 -*-
"""AI Agent

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ei-7QVcrRc0dbTJTN22nemYkkw50O1a0
"""
import streamlit as st
import pandas as pd
import pdfplumber
import openai
import os

# Load OpenAI API key securely from Streamlit secrets or environment
api_key = os.getenv("OPENAI_API_KEY") or st.secrets.get("OPENAI_API_KEY")

# Page config
st.set_page_config(page_title="AI Report Summarizer", layout="wide")
st.title("üìä AI Report Summarizer")
st.markdown("Upload your PDF or Excel report to get a concise summary powered by OpenAI.")

# Function: Extract PDF text
def extract_text_from_pdf(file):
    with pdfplumber.open(file) as pdf:
        return "\n".join(
            page.extract_text() for page in pdf.pages if page.extract_text()
        )

# Function: Generate OpenAI summary
def generate_summary(text_input):
    if not api_key:
        return "‚ùå OpenAI API key is missing. Please set it in Streamlit Secrets."

    client = openai.OpenAI(api_key=api_key)
    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Summarize this report in bullet points."},
                {"role": "user", "content": text_input}
            ]
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"‚ùå Error from OpenAI: {e}"

# Function: Summarize Excel content
def summarize_excel(uploaded_file):
    df = pd.read_excel(uploaded_file)
    preview = df.head(5).to_string(index=False)
    prompt = f"The Excel file contains {len(df)} rows and {len(df.columns)} columns.\nPreview:\n{preview}\n\nSummarize this in a few key insights."
    return generate_summary(prompt)

# File uploader
uploaded_file = st.file_uploader("Upload a PDF or Excel File", type=["pdf", "xlsx"])

if uploaded_file:
    with st.spinner("Reading file and generating summary..."):
        try:
            if uploaded_file.name.endswith(".pdf"):
                text = extract_text_from_pdf(uploaded_file)
                summary = generate_summary(text)
            elif uploaded_file.name.endswith(".xlsx"):
                summary = summarize_excel(uploaded_file)
            else:
                summary = "Unsupported file format."

            st.subheader("üìù Summary")
            st.success(summary)
        except Exception as e:
            st.error(f"An error occurred: {str(e)}")
